Key
React gives elements a special built-in prop named key to quickly know which items were changed, added, or removed
A unique identifier that gives react a way to quickly and reliably identify an elemnt in the list

map() - map returns an array as a value (the transformed original array) where ForEach returns 'undefined'

const players = [
  {
    name: "Guil",
    score: 50,
    id: 1   //set each different unique number
  },
  {
    name: "Treasure",
    score: 85,
    id: 2
  },
  {
    name: "Ashley",
    score: 95,
    id: 3
  },
  {
    name: "James",
    score: 80,
    id: 4
  }
];

const Header = (props) => {
  return (
    <header>
      <h1>{ props.title }</h1>
      <span className="stats">Players: { props.totalPlayers }</span>
    </header>
  );
}

const Player = (props) => {
  return (
    <div className="player">
      <span className="player-name">
        { props.name }
      </span>

      <Counter score={props.score} />
    </div>
  );
}

const Counter = (props) => {
  return (
    <div className="counter">
      <button className="counter-action decrement"> - </button>
      <span className="counter-score">{ props.score }</span>
      <button className="counter-action increment"> + </button>
    </div>
  );
}

const App = (props) => {
  return (
    <div className="scoreboard">
      <Header 
        title="Scoreboard" 
        totalPlayers={props.initialPlayers.length} 
      />

      {/* Players list */}       
      {props.initialPlayers.map( player =>    //.map() is a javasript component, receive and process each item in the array
        <Player         //iterate over data and render elements in React.
          name={player.name}
          score={player.score}
          key={player.id.toString()}            //use keys to track elements, convert our id to string use toString().
        />
      )}
    </div>
  );
}

ReactDOM.render(        // App is where the component is being rendered
  <App initialPlayers={players} />,   
  document.getElementById('root')
);    //pass the player array as a prop here with objects




//Questions
Which of the following best describes properties (or props) in React?
  Props pass data from a parent component downn to child components

Which property should you provide to components generated by iterating over an array?
  key

How should you write an iteration method like map() in JSX?
  It is a javascript expression, so it needs to be placed inside curly braces
  
Props are 'read only' or immutable. A component can only read the props given to it, never change them.
  

Pass the score prop the number value 100.
<Student name="Gob" score={ 100 } />


Enable the use of props inside the Header component. Then, add the code that displays the value of a prop named user.
const Header = (props) => {
  return (
    <h1>Hello, { props.user }!</h1>
  );
}
